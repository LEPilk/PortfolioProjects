/*
Covid 19 Data Exploration Using SQL

Skills used: Joins, Aggregate Functions, and Converting Data Types
*/

SELECT *
FROM 
	dbo.CovidDeaths
WHERE 
	continent is not null 
ORDER BY 
	Location, Date


-- Pull the data that we are going use

SELECT 
	Location, 
	date, 
	total_cases, 
	new_cases, 
	total_deaths, 
	population
FROM 
	dbo.CovidDeaths
WHERE 
	continent is not null 
ORDER BY 
	Location, Date


/*Total Cases vs Total Deaths
   Show likelihood of dying if you contract covid in your country
*/

SELECT 
	Location, 
	date, 
	total_cases,
	total_deaths, 
	(total_deaths/total_cases)*100 AS DeathPercentage
FROM 
	PortfolioProjectSQLDataExplore.dbo.CovidDeaths
WHERE 
	location like '%states%'
AND 
	continent is not null 
ORDER BY 
	Location, Date


/* Total Cases vs Population
Shows what percentage of population infected with Covid
*/

SELECT 
	Location, 
	date, 
	Population, 
	total_cases, 
	(total_cases/population)*100 AS PercentPopulationInfected
FROM 
	dbo.CovidDeaths
WHERE 
	location like '%states%'
ORDER BY 
	Location, 
	Date

-- Countries with Highest Infection Rate compared to Population

SELECT 
	Location, 
	Population, 
	MAX(total_cases) AS HighestInfectionCount,  
	MAX((total_cases/population))*100 AS PercentPopulationInfected
FROM 
	dbo.CovidDeaths
GROUP BY 
	Location, 
	Population
ORDER BY 
	PercentPopulationInfected desc


-- Countries with Highest Death Count per Population

SELECT 
	Location, 
	MAX(cast(Total_deaths AS INT)) AS TotalDeathCount
FROM 
	dbo.CovidDeaths
WHERE 
	continent is not null 
GROUP BY 
	Location
ORDER BY 
	TotalDeathCount desc



/* Examining the Death Count By Continent and Country

Pulls the data and organizes it to see contintents and countries with the highest death count per population

*/

SELECT 
	continent, 
	MAX(cast(Total_deaths AS int)) AS TotalDeathCount
FROM 
	dbo.CovidDeaths
WHERE 
	location like '%states%'
WHERE 
	continent is not null 
GROUP BY 
	continent
ORDER BY 
	TotalDeathCount desc

SELECT 
	Location, 
	MAX(cast(Total_deaths AS int)) AS TotalDeathCount
FROM 
	dbo.CovidDeaths
WHERE 
	location like '%states%' AND
	continent is not null 
GROUP BY 
	Location
ORDER BY 
	TotalDeathCount DESC


/*
GLOBAL NUMBERS 
Looking at countries and seeing which ones have higher percentage of those infected dying

*/

SELECT 
	Location, 
	SUM(new_cases) AS total_cases, 
	SUM(cast(new_deaths AS int)) AS total_deaths, 
	SUM(cast(new_deaths AS int))/SUM(New_Cases)*100 AS DeathPercentage
FROM 
	dbo.CovidDeaths
WHERE 
	continent is not null 
AND 
	total_cases is not null
GROUP BY 
	Location
ORDER BY 
	DeathPercentage desc


/*
Total Population vs Vaccinations
Shows Percentage of Population that has recieved at least one Covid Vaccine
*/

SELECT 
	dea.continent, 
	dea.location, 
	dea.date, 
	dea.population, 
	vac.new_vaccinations, 
	SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location ORDER BY dea.location, dea.Date) AS RollingPeopleVaccinated--, 
	(RollingPeopleVaccinated/population)*100
FROM 
	dbo.CovidDeaths dea
JOIN 
	dbo.CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null 
--ORDER BY date, total_cases


/* 
 Using CTE(common_table_expression) to perform Calculation on Partition By in previous query
*/

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location ORDER BY dea.location, dea.Date) AS RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM 
	dbo.CovidDeaths dea
JOIN 
	dbo.CovidVaccinations vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent is not null 
--ORDER BY 
	date, 
	total_cases
)
SELECT *, 
	(RollingPeopleVaccinated/Population)*100
FROM 
	PopvsVac


